/*
给你一个 32 位的有符号整数 x ，返回 x 中每位上的数字反转后的结果。

如果反转后整数超过 32 位的有符号整数的范围 [−231,  231 − 1] ，就返回 0。

假设环境不允许存储 64 位整数（有符号或无符号）。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/reverse-integer
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/

func reverse(x int) int {
	var isNegativeNum bool
	if x < 0 {
		isNegativeNum = true
		x *= -1
	} else {
		isNegativeNum = false
	}
	// 保证x为正数
	xStr := strconv.Itoa(x)
	str := reverseStr(xStr)
	res, _ := strconv.Atoi(str)
	if isNegativeNum {
		res *= -1
	}
	if res > math.MaxInt32 || res < math.MinInt32 {
		res = 0
	}
	return res
}

func reverseStr(str string) string {
	arr := []rune(str)
	temp := make([]rune, 0)
	len := len(arr)
	for i := 0; i < len; i++ {
		temp = append(temp, arr[len - i - 1])
	}
	return string(temp)
}

